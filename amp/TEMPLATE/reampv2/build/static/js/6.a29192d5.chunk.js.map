{"version":3,"sources":["modules/sscdashboard/reducers/rootReducer.js","modules/sscdashboard/reducers/startupReducer.js","modules/sscdashboard/components/sectors/SectorsHome.jsx","modules/sscdashboard/components/map/d3Layer/D3AddShapeToLeafLet.jsx","modules/sscdashboard/components/map/MapWithD3Figures.js","modules/sscdashboard/components/SSCDashboard.router.jsx","modules/sscdashboard/index.js"],"names":["combineReducers","startupReducer","state","action","type","result","payload","SectorsHome","Component","D3Shape","props","onZoom","feature","map","e","update","L","attr","d","latLngToLayerPoint","LatLng","x","y","this","leaflet","leafletElement","svg","d3","getPanes","overlayPane","append","_size","g","selectAll","data","getJsonPoints","objects","enter","style","on","circles","forEach","circle","coordinates","MapLayer","MapWithD3Figures","lat","lng","zoom","position","WrappedD3AddShapeToLeafLet","withLeaflet","D3AddShapeToLeafLet","Map","classname","center","TileLayer","attribution","url","Marker","Popup","SSCDashboardRouter","path","component","MapContainer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","SSCDashboardApp","store","createStore","rootReducer","applyMiddleware","thunk","currentTab","modules","push","name","link","className"],"mappings":"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","file":"static/js/6.a29192d5.chunk.js","sourcesContent":["/*\n src/reducers/rootReducer.js\n*/\nimport {combineReducers} from 'redux';\nimport startupReducer from './startupReducer';\n\nexport default combineReducers({\n    startupReducer\n});\n","/*\n src/reducers/simpleReducer.js\n*/\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'SIMPLE_ACTION':\n            return {\n                result: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import React, {Component} from 'react';\n\nexport default class SectorsHome extends Component {\n\n    render() {\n        return (<div>Sectors home</div>);\n    }\n}\n","import {MapLayer} from \"react-leaflet\";\nimport * as L from 'leaflet';\nimport * as d3 from \"d3\";\n\nexport default class D3Shape extends MapLayer {\n\n    constructor(props) {\n        super(props);\n    }\n\n    createLeafletElement(props) {\n        return L.geoJson();\n    }\n\n\n    onZoom = (feature,map) => e => {\n        debugger;\n        this.update(feature, map);\n    };\n\n    update(feature, map){\n        feature.attr(\"transform\",\n            function (d) {\n                return \"translate(\" +\n                    map.latLngToLayerPoint(d.LatLng).x + \",\" +\n                    map.latLngToLayerPoint(d.LatLng).y + \")\";\n            }\n        )\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        const {map} = this.props.leaflet;\n\n        this.leafletElement = L.geoJSON();\n        this.svg = d3.select(map.getPanes().overlayPane).append('svg');\n        this.svg.attr(\"style\", \"width:\" + map._size.x + \"; height:\" + map._size.x);\n        this.g = this.svg.append('g');//.attr('class', 'leaflet-zoom-hide');\n\n        //this needs to be configurable if needed\n        const feature = this.g.selectAll(\"circle\")\n            .data(this.getJsonPoints().objects)\n            .enter().append(\"circle\")\n            .style(\"stroke\", \"black\")\n            .style(\"opacity\", .6)\n            .style(\"fill\", \"red\")\n            .attr(\"r\", 20);\n\n        map.on(\"viewreset\", this.onZoom(feature,map));\n\n        this.update(feature, map);\n    }\n    getJsonPoints() {\n        const circles =\n            {\n                \"objects\": [\n                    {\"circle\": {\"coordinates\": [-101.404398, 40.649782]}},\n                    {\"circle\": {\"coordinates\": [25.767555, -80.197188]}},\n                ]\n            };\n        circles.objects.forEach(d => {\n            d.LatLng = new L.LatLng(d.circle.coordinates[0],\n                d.circle.coordinates[1])\n        });\n        return circles;\n    }\n}\n","import React, {createRef, Component} from 'react';\nimport {Map, TileLayer, Marker, Popup, withLeaflet} from 'react-leaflet';\nimport {LatLng} from 'leaflet';\nimport * as d3 from 'd3'\nimport '../../../../App.css';\nimport D3AddShapeToLeafLet from \"./d3Layer/D3AddShapeToLeafLet\";\n\nexport default class MapWithD3Figures extends Component {\n    state = {\n        lat: 0,\n        lng: 0,\n        zoom: 2,\n    };\n    render() {\n        const position = [this.state.lat, this.state.lng];\n        const WrappedD3AddShapeToLeafLet = withLeaflet(D3AddShapeToLeafLet);\n        return (\n            <Map classname='map-container' center={position} zoom={this.state.zoom}>\n                <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={position}>\n                    <Popup>\n                        A pretty CSS3 popup. <br/> Easily customizable.\n                    </Popup>\n                </Marker>\n                {<WrappedD3AddShapeToLeafLet/>}\n            </Map>);\n    }\n}\n","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport MapHome from './map/MapHome';\nimport './../../../App.css';\nimport SectorsHome from './sectors/SectorsHome';\nimport MapContainer from \"./layout/map/map-content\";\nimport MapWithD3Figures from './map/MapWithD3Figures';\nclass SSCDashboardRouter extends Component {\n    render() {\n        return (\n            <div>\n                <Route path=\"/sscdashboard/map\" component={MapContainer}/>\n                <Route path=\"/sscdashboard/sectors\" component={SectorsHome}/>\n                <Route path=\"/sscdashboard/figures\" component={MapWithD3Figures}/>\n            </div>\n        );\n    }\n}\nexport default SSCDashboardRouter;\n","import React, {Component} from 'react';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport {Provider} from 'react-redux'\nimport {Link} from \"react-router-dom\";\nimport SSCDashboardRouter from \"./components/SSCDashboard.router\";\nimport Sidebar from \"./components/layout/sidebar/sidebar\";\nimport MapContainer from \"./components/layout/map/map-content\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nclass SSCDashboardApp extends Component {\n\n    constructor(props) {\n        super(props)\n        this.store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n        this.state = {\n            currentTab: ''\n        };\n    }\n    render() {\n        const listGroupItem = 'list-group-item';\n        const active = 'active';\n        const modules = [];\n        // modules need to be loaded dynamically\n        modules.push({name: 'Map', link: '/sscdashboard/home'});\n        modules.push({name: 'Sectors', link: '/sscdashboard/sectors'});\n        modules.push({name: 'MapWithFigures', link: '/sscdashboard/figures'});\n        const navItem = 'nav-item';\n        const classActive = 'active';\n        const styleMargin = {'marginLeft': '0px'};\n        const classHeight = {height: '700px'};\n        return (<Provider store={this.store}>\n            return (\n            <div className=\"container-fluid content-wrapper\">\n                <div className=\"row\">\n                    <Sidebar/>\n                    <SSCDashboardRouter/>\n                </div>\n            </div>);\n        </Provider>);\n    }\n}\nexport default SSCDashboardApp;\n\n"],"sourceRoot":""}