{"version":3,"sources":["modules/sscdashboard/components/layout/filters/horizontal-filters.jsx","modules/sscdashboard/components/layout/map/map-content.jsx","modules/sscdashboard/components/layout/sidebar/home-button.jsx","modules/sscdashboard/components/layout/sidebar/sidebar-intro.jsx","modules/sscdashboard/components/layout/filters/sector.jsx","modules/sscdashboard/components/layout/filters/support.jsx","modules/sscdashboard/components/layout/filters/download.jsx","modules/sscdashboard/components/layout/filters/sidebar-filters.jsx","modules/sscdashboard/components/layout/sidebar/sidebar.jsx","modules/sscdashboard/components/map/d3Layer/ConnectionLayer.jsx","modules/sscdashboard/components/map/MapHome.jsx","modules/sscdashboard/components/SSCDashboard.jsx","App.route.jsx","App.js","serviceWorker.js","index.js"],"names":["HorizontalFilters","className","Component","MapContainer","MapHome","HomeButton","class","type","SidebarIntro","FilterSector","data-toggle","data-target","id","FilterSupport","FilterDownload","SidebarFilters","Sidebar","ConnectionLayer","props","lines","this","map","leaflet","points","update","prevProps","newProps","length","i","latitude","longitude","compareProps","forEach","l","removeFrom","point1","point2","lineColor","lineWeight","breaks","maxWeigth","onClick","latlng1","latlng2","offsetX","offsetY","r","Math","sqrt","pow","theta","atan2","r2","cos","theta2","midpointX","midpointLatLng","sin","weight","breakUnit","value","pathOptions","color","pointData","dashOffset","dashArray","stroke","line","L","curve","addTo","on","f","target","options","latlng","push","nodePoint","cleanLines","d","drawLine","React","state","lat","lng","zoom","dataFiltered","center","result","data","countryCenter","CircleMarker","radius","opacity","fill","fillColor","fillOpacity","centerCountry","mapCenter","WrappedConnectionLayer","withLeaflet","Map","TileLayer","attribution","url","getPoints","SSCDashboard","AMPOfflineDownloadApp","lazy","AppRoute","fallback","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","boilerplate","layout","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qNAeeA,G,mLARP,OACE,yBAAKC,UAAU,oBAAf,yB,GAHsBC,c,gBCE1BC,E,uKAEE,OACI,yBAAKF,UAAU,yCACX,kBAAC,EAAD,MACA,kBAACG,EAAA,EAAD,W,GALWF,aAWZC,O,qGCFAE,G,6KAVP,OACE,6BACA,4BAAQC,MAAM,eAAeC,KAAK,UAAlC,4B,GAJeL,cCUVM,E,uKARP,OACE,yBAAKP,UAAU,iBACb,6Q,GAJeC,aC4BZO,G,6KAzBP,OACE,yBAAKR,UAAU,0BAEZ,yBAAKK,MAAM,uBAEV,yBAAKA,MAAM,iBACT,wBAAIA,MAAM,qBAAqBI,cAAY,WAAWC,cAAY,WAAlE,YAIF,yBAAKC,GAAG,SAASN,MAAM,2BACrB,yBAAKA,MAAM,cAAX,yB,GAbWJ,cC2BZW,E,uKAzBP,OACE,yBAAKZ,UAAU,0BAEZ,yBAAKK,MAAM,uBAEV,yBAAKA,MAAM,iBACT,wBAAIA,MAAM,sBAAsBI,cAAY,WAAWC,cAAY,YAAnE,qBAIF,yBAAKC,GAAG,UAAUN,MAAM,2BACtB,yBAAKA,MAAM,cAAX,0B,GAbYJ,aC2BbY,E,uKAzBP,OACE,yBAAKb,UAAU,0BAEZ,yBAAKK,MAAM,uBAEV,yBAAKA,MAAM,iBACT,wBAAIA,MAAM,uBAAuBI,cAAY,WAAWC,cAAY,aAApE,8BAIF,yBAAKC,GAAG,WAAWN,MAAM,2BACvB,yBAAKA,MAAM,cAAX,2B,GAbaJ,aCgBda,E,uKAVP,OACE,yBAAKd,UAAU,0BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANiBC,aCCvBc,G,6KAEE,OACE,yBAAKf,UAAU,oBACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANYC,cAYPc,O,0KClBMC,G,8DACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,gEAMfC,KAAKC,IAAMD,KAAKF,MAAMI,QAAQD,IACbD,KAAKF,MAAfK,QAEHH,KAAKI,W,mCAIAC,EAAWC,GACpB,GAAID,EAAUF,OAAOI,SAAWD,EAASH,OAAOI,OAC5C,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUF,OAAOI,OAAQC,IACzC,GAAIH,EAAUF,OAAOK,GAAGC,WAAaH,EAASH,OAAOK,GAAGC,UAAYJ,EAAUF,OAAOK,GAAGE,YAAcJ,EAASH,OAAOK,GAAGE,UACrH,OAAO,EAIf,OAAO,I,yCAGQL,GACXL,KAAKW,aAAaN,EAAWL,KAAKF,QAClCE,KAAKI,W,mCAIC,IAAD,OACLJ,KAAKD,MAAMQ,OAAS,IACpBP,KAAKD,MAAMa,SAAQ,SAAAC,GACfA,EAAEC,WAAW,EAAKb,QAEtBD,KAAKD,MAAQ,M,+BAIZgB,EAAQC,GAAS,IAAD,EAC4ChB,KAAKF,MAA/DmB,EADc,EACdA,UAAWC,EADG,EACHA,WAAYC,EADT,EACSA,OADT,IACiBC,iBADjB,MAC6B,GAD7B,EACiCC,EADjC,EACiCA,QAEhDC,EAAU,CAACP,EAAON,SAAUM,EAAOL,WACrCa,EAAU,CAACP,EAAOP,SAAUO,EAAON,WAEjCc,EAAUD,EAAQ,GAAKD,EAAQ,GACjCG,EAAUF,EAAQ,GAAKD,EAAQ,GAE7BI,EAAIC,KAAKC,KAAKD,KAAKE,IAAIL,EAAS,GAAKG,KAAKE,IAAIJ,EAAS,IACzDK,EAAQH,KAAKI,MAAMN,EAASD,GAI1BQ,EAAMN,EAAI,EAAMC,KAAKM,IAFN,MAGjBC,EAASJ,EAHQ,KAKfK,EAAaH,EAAKL,KAAKM,IAAIC,GAAWZ,EAAQ,GAG9Cc,EAAiB,CAFNJ,EAAKL,KAAKU,IAAIH,GAAWZ,EAAQ,GAEfa,GAE/BG,EAAS,EACb,GAAInB,GAAUA,EAAOZ,OAEjB,IADA,IAAMgC,EAAYnB,EAAYD,EAAOZ,OAC5BC,EAAI,EAAGA,EAAIW,EAAOZ,OAAS,EAAGC,IAC/BQ,EAAOwB,MAAQrB,EAAOX,IAAMQ,EAAOwB,MAAQrB,EAAOX,EAAI,KACtD8B,EAASC,GAAa/B,EAAI,IAMtC,IAAMiC,EAAc,CAChBC,MAAOzB,GAAa,sBACpBqB,OAAQpB,GAAcoB,EACtBK,UAAW3B,EACX4B,WAAY,KACZC,UAAW,QACXC,OAAQ,SAGNC,EAAO,IAAIC,IAAEC,MACf,CACI,IAAK3B,EACL,IAAKc,EACLb,GACDkB,GACPM,EAAKG,MAAMlD,KAAKC,KACZoB,GACA0B,EAAKI,GAAG,SAAS,SAAAC,GAAC,OAAI/B,EAAQ+B,EAAEC,OAAOC,QAAQX,UAAWS,EAAEG,WAEhEvD,KAAKD,MAAMyD,KAAKT,K,+BAGV,IAAD,SACuB/C,KAAKF,MAA1BK,EADF,EACEA,OAAQsD,EADV,EACUA,UACfzD,KAAK0D,aACLvD,EAAOS,SAAQ,SAAA+C,GACX,EAAKC,SAASH,EAAWE,Q,+BAK7B,OAAQ,kC,GA1G6BE,IAAM/E,YCG9BE,G,kNACjB8E,MAAQ,CACJC,KAAM,kBACNC,IAAK,mBACLC,KAAM,K,wDAGAC,EAAcC,GACpB,IAAIC,EAAS,GACbF,EAAatD,SAAQ,SAAAyD,GACjB,IAAMC,EAAgB,IAAItB,SAASqB,EAAK5D,SAAU4D,EAAK3D,WACvD0D,EAAOZ,KACH,kBAACe,EAAA,EAAD,CACIJ,OAAQG,EACRE,OAAQ,EACR1B,QAAQ,EACRJ,MAAO,UACP+B,QAAS,GACTnC,OAAQ,EACRoC,MAAM,EACNC,UAAW,UACXC,YAAa,SAMzB,IAAMC,EAAgB,IAAI7B,SAASmB,EAAO1D,SAAU0D,EAAOzD,WAiB3D,OAhBA0D,EAAOZ,KACH,kBAACe,EAAA,EAAD,aACI1B,UAAW,QACXsB,OAAQU,EACRL,OAAQ,GACR1B,QAAQ,EACRJ,MAAO,UACP+B,QAAS,GACTnC,OAAQ,EACRoC,MAAM,EACNC,UAAW,UACXC,YAAa,IAVjB,kBAeGR,I,+BAIP,IAAMU,EAAY,CAAC9E,KAAK8D,MAAMC,IAAK/D,KAAK8D,MAAME,KACxCe,EAAyBC,YAAYnF,GACrCsE,EAAS,CAAC1D,SAAU,UAAWC,WAAY,WAC3CP,EAAS,GAYf,OAVAA,EAAOqD,KAAK,CAAC/C,UAAW,UAAWC,WAAY,WAC/CP,EAAOqD,KAAK,CAAC/C,SAAU,SAAUC,UAAW,aAC5CP,EAAOqD,KAAK,CAAC/C,SAAU,SAAUC,WAAY,YAC7CP,EAAOqD,KAAK,CAAC/C,SAAU,UAAWC,UAAW,aAC7CP,EAAOqD,KAAK,CAAC/C,SAAU,SAAUC,UAAW,aAC5CP,EAAOqD,KAAK,CAAC/C,UAAW,SAAUC,WAAY,YAC9CP,EAAOqD,KAAK,CAAC/C,UAAW,UAAWC,WAAY,YAC/CP,EAAOqD,KAAK,CAAC/C,UAAW,UAAWC,WAAY,YAC/CP,EAAOqD,KAAK,CAAC/C,UAAW,SAAUC,UAAW,YAC7CP,EAAOqD,KAAK,CAAC/C,SAAU,UAAWC,UAAW,WAEzC,kBAACuE,EAAA,EAAD,CAAKpG,UAAW,gBAAiBsF,OAAQW,EAAWb,KAAMjE,KAAK8D,MAAMG,MACjE,kBAACiB,EAAA,EAAD,CACIC,YAAY,0EACZC,IAAI,uDAER,kBAACL,EAAD,CAAwB5E,OAAQA,EAAQsD,UAAWU,IAClDnE,KAAKqF,UAAUlF,EAAQgE,Q,GAtEHrF,e,8OCiBtBwG,E,kDAfX,WAAYxF,GAAQ,uCACVA,G,qDAIN,OACE,yBAAKjB,UAAU,mCACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,MACA,kBAAC,IAAD,Y,GAXaC,aCFrByG,GADkBC,gBAAK,kBAAM,sDACLA,gBAAK,kBAAM,uDAkB1BC,E,uKAdP,OACI,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,4CAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWN,IAC3B,kBAAC,IAAD,CAAOK,KAAK,sBAAsBC,UAAWL,W,GAP9CzG,aCKR+G,E,uKANP,OACI,kBAAC,EAAD,U,GAHM/G,aCQEgH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qBCVNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SAM5B,IAAIC,IAAYC,OAAO,IDiHjB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3746e6fe.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport './filters.css';\n\nclass HorizontalFilters extends Component {\n    render() {\n        return (\n          <div className=\"h-filter-wrapper\">\n          Horizontal-filers\n          </div>\n        );\n    }\n}\n\nexport default HorizontalFilters;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport HorizontalFilters from '../filters/horizontal-filters';\nimport './map.css';\nimport MapHome from \"../../map/MapHome\";\n\nclass MapContainer extends Component {\n    render() {\n        return (\n            <div className=\"col-md-10 col-md-offset-2 map-wrapper\">\n                <HorizontalFilters/>\n                <MapHome/>\n            </div>\n        );\n    }\n}\n\nexport default MapContainer;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nclass HomeButton extends Component {\n    render() {\n        return (\n          <div>\n          <button class=\"btn btn-home\" type=\"button\">\n              Page dâ€™Accueil\n          </button>\n          </div>\n        );\n    }\n}\n\nexport default HomeButton;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nclass SidebarIntro extends Component {\n    render() {\n        return (\n          <div className=\"sidebar-intro\">\n            <p>Lorem ipsum dolor sit amet, consect etur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut aenim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n          </div>\n        );\n    }\n}\n\nexport default SidebarIntro;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport './filters.css';\n\nclass FilterSector extends Component {\n    render() {\n        return (\n          <div className=\"sidebar-filter-wrapper\">\n\n             <div class=\"panel panel-default\">\n\n              <div class=\"panel-heading\">\n                <h4 class=\"panel-title sector\" data-toggle=\"collapse\" data-target=\"#sector\">\n                  Secteur\n                </h4>\n              </div>\n              <div id=\"sector\" class=\"panel-collapse collapse\">\n                <div class=\"panel-body\">\n                  Sector Options\n                </div>\n              </div>\n\n\n             </div>\n\n\n          </div>\n        );\n    }\n}\n\nexport default FilterSector;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport './filters.css';\n\nclass FilterSupport extends Component {\n    render() {\n        return (\n          <div className=\"sidebar-filter-wrapper\">\n\n             <div class=\"panel panel-default\">\n\n              <div class=\"panel-heading\">\n                <h4 class=\"panel-title support\" data-toggle=\"collapse\" data-target=\"#support\">\n                  Types de Support\n                </h4>\n              </div>\n              <div id=\"support\" class=\"panel-collapse collapse\">\n                <div class=\"panel-body\">\n                  Support options\n                </div>\n              </div>\n\n\n             </div>\n\n\n          </div>\n        );\n    }\n}\n\nexport default FilterSupport;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport './filters.css';\n\nclass FilterDownload extends Component {\n    render() {\n        return (\n          <div className=\"sidebar-filter-wrapper\">\n\n             <div class=\"panel panel-default\">\n\n              <div class=\"panel-heading\">\n                <h4 class=\"panel-title download\" data-toggle=\"collapse\" data-target=\"#download\">\n                  TÃ©lÃ©chargez la Cart\n                </h4>\n              </div>\n              <div id=\"download\" class=\"panel-collapse collapse\">\n                <div class=\"panel-body\">\n                  Download options\n                </div>\n              </div>\n\n\n             </div>\n\n\n          </div>\n        );\n    }\n}\n\nexport default FilterDownload;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport FilterSector from './sector';\nimport FilterSupport from './support';\nimport FilterDownload from './download';\n\nimport './filters.css';\n\nclass SidebarFilters extends Component {\n    render() {\n        return (\n          <div className=\"sidebar-filter-wrapper\">\n            <FilterSector/>\n            <FilterSupport/>\n            <FilterDownload/>\n          </div>\n        );\n    }\n}\n\nexport default SidebarFilters;\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport HomeButton from './home-button';\nimport SidebarIntro from './sidebar-intro';\nimport SidebarFilters from '../filters/sidebar-filters';\n\nimport './sidebar.css';\n\n\nclass Sidebar extends Component {\n    render() {\n        return (\n          <div className=\"col-md-2 sidebar\">\n          <HomeButton/>\n          <SidebarFilters/>\n          <SidebarIntro/>\n          </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport L from 'leaflet';\nimport {curve} from 'leaflet-curve';\n\nexport default class ConnectionLayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.lines = [];\n    }\n\n    componentDidMount() {\n        this.map = this.props.leaflet.map;\n        const {points} = this.props;\n        if (points) {\n            this.update()\n        }\n    }\n\n    compareProps(prevProps, newProps) {\n        if (prevProps.points.length !== newProps.points.length) {\n            return true;\n        }\n        for (let i = 0; i < prevProps.points.length; i++) {\n            if (prevProps.points[i].latitude !== newProps.points[i].latitude || prevProps.points[i].longitude !== newProps.points[i].longitude) {\n                return true;\n            }\n        }\n        ;\n        return false;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.compareProps(prevProps, this.props)) {\n            this.update();\n        }\n    }\n\n    cleanLines() {\n        if (this.lines.length > 0) {\n            this.lines.forEach(l => {\n                l.removeFrom(this.map)\n            });\n            this.lines = [];\n        }\n    }\n\n    drawLine(point1, point2) {\n        const {lineColor, lineWeight, breaks, maxWeigth = 20, onClick} = this.props;\n\n        const latlng1 = [point1.latitude, point1.longitude],\n            latlng2 = [point2.latitude, point2.longitude];\n\n        const offsetX = latlng2[1] - latlng1[1],\n            offsetY = latlng2[0] - latlng1[0];\n\n        const r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n            theta = Math.atan2(offsetY, offsetX);\n\n        const thetaOffset = (3.14 / 10);\n\n        const r2 = (r / 2) / (Math.cos(thetaOffset)),\n            theta2 = theta + thetaOffset;\n\n        const midpointX = (r2 * Math.cos(theta2)) + latlng1[1],\n            midpointY = (r2 * Math.sin(theta2)) + latlng1[0];\n\n        const midpointLatLng = [midpointY, midpointX];\n\n        let weight = 5;\n        if (breaks && breaks.length) {\n            const breakUnit = maxWeigth / breaks.length;\n            for (let i = 0; i < breaks.length - 1; i++) {\n                if (point2.value > breaks[i] && point2.value < breaks[i + 1]) {\n                    weight = breakUnit * (i + 1);\n                }\n            }\n            ;\n        }\n\n        const pathOptions = {\n            color: lineColor || 'rgba(255,140,0,0.5)',\n            weight: lineWeight || weight,\n            pointData: point2,\n            dashOffset: '51',\n            dashArray: '10 10',\n            stroke: 'white'\n        }\n\n        const line = new L.curve(\n            [\n                'M', latlng1,\n                'Q', midpointLatLng,\n                latlng2\n            ], pathOptions);\n        line.addTo(this.map);\n        if (onClick) {\n            line.on('click', f => onClick(f.target.options.pointData, f.latlng));\n        }\n        this.lines.push(line);\n    }\n\n    update() {\n        const {points, nodePoint} = this.props;\n        this.cleanLines();\n        points.forEach(d => {\n            this.drawLine(nodePoint, d);\n        })\n    }\n\n    render() {\n        return (<div/>)\n    }\n}\n","import React, {Component} from 'react';\nimport {Map, TileLayer, withLeaflet, CircleMarker} from 'react-leaflet';\nimport * as L from 'leaflet';\nimport '../../../../App.css';\nimport ConnectionLayer from \"./d3Layer/ConnectionLayer\";\nimport '../layout/map/map.css';\n\nexport default class MapHome extends Component {\n    state = {\n        lat: -7.798078531355303,\n        lng: 27.070312500000004,\n        zoom: 2.5,\n    };\n\n    getPoints(dataFiltered, center) {\n        let result = [];\n        dataFiltered.forEach(data => {\n            const countryCenter = new L.LatLng(data.latitude, data.longitude);\n            result.push(\n                <CircleMarker\n                    center={countryCenter}\n                    radius={6}\n                    stroke={true}\n                    color={'#FAB47D'}\n                    opacity={0.7}\n                    weight={2}\n                    fill={true}\n                    fillColor={'#FAB47D'}\n                    fillOpacity={0.9}\n                >\n                </CircleMarker>\n            )\n        });\n        //This will come from configuration\n        const centerCountry = new L.LatLng(center.latitude, center.longitude);\n        result.push(\n            <CircleMarker\n                dashArray={'10 10'}\n                center={centerCountry}\n                radius={12}\n                stroke={true}\n                color={'#006600'}\n                opacity={0.3}\n                weight={2}\n                fill={true}\n                fillColor={'#006600'}\n                fillOpacity={0.3}\n                dashArray\n            >\n            </CircleMarker>\n        );\n        return result;\n    }\n\n    render() {\n        const mapCenter = [this.state.lat, this.state.lng];\n        const WrappedConnectionLayer = withLeaflet(ConnectionLayer);\n        const center = {latitude: 18.567634, longitude: -72.315361};\n        const points = [];\n        //this will come from the api\n        points.push({latitude: -14.235004, longitude: -51.92528});\n        points.push({latitude: 35.86166, longitude: 104.195397});\n        points.push({latitude: 4.570868, longitude: -74.297333});\n        points.push({latitude: 14.058324, longitude: 108.277199});\n        points.push({latitude: 4.535277, longitude: 114.727669});\n        points.push({latitude: -9.189967, longitude: -75.015152});\n        points.push({latitude: -38.416097, longitude: -63.616672});\n        points.push({latitude: -35.675147, longitude: -71.542969});\n        points.push({latitude: -4.038333, longitude: 21.758664});\n        points.push({latitude: 20.593684, longitude: 78.96288});\n        return (\n            <Map className={'map-container'} center={mapCenter} zoom={this.state.zoom} >\n                <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <WrappedConnectionLayer points={points} nodePoint={center}/>\n                {this.getPoints(points, center)}\n\n            </Map>\n        );\n    }\n\n}\n","import React, {Component} from \"react\";\n  // import * as StartupActions from './actions/startupAction';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport Sidebar from './layout/sidebar/sidebar';\nimport MapContainer from './layout/map/map-content';\n\nclass SSCDashboard extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n          <div className=\"container-fluid content-wrapper\">\n            <div className=\"row\">\n              <Sidebar/>\n              <MapContainer/>\n            </div>\n          </div>);\n    }\n}\n\nexport default SSCDashboard;\n","import React, {Suspense, lazy, useState, Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport SSCDashboard from \"./modules/sscdashboard/components/SSCDashboard\";\nconst SSCDashboardApp = lazy(() => import('./modules/sscdashboard'));\nconst AMPOfflineDownloadApp = lazy(() => import('./modules/ampoffline/Download'));\n\nclass AppRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                        <Route path=\"/\" component={SSCDashboard}/>\n                        <Route path=\"/ampofflinedownload\" component={AMPOfflineDownloadApp}/>\n                    </Switch>\n                </Suspense>\n            </Router>\n\n        );\n    }\n}\n\nexport default AppRoute;\n","import React, {Suspense, lazy, useState, Component} from 'react';\nimport './App.css';\nimport AppRoute from './App.route';\n\nclass App extends Component {\n    render() {\n        return (\n            <AppRoute/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport boilerplate from '../../ampTemplate/node_modules/amp-boilerplate/dist/amp-boilerplate.js';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nnew boilerplate.layout({});\nserviceWorker.unregister();\n"],"sourceRoot":""}