{"version":3,"sources":["modules/ampoffline/Download/images/monitor.png","utils/loadTranslations.js","modules/ampoffline/Download/actions/fetchTranslations.js","utils/actions/translationsActions.js","modules/ampoffline/Download/reducers/startupReducer.js","modules/ampoffline/Download/actions/fetchReleases.js","modules/ampoffline/Download/actions/startupAction.js","modules/ampoffline/Download/constants/Constants.js","modules/ampoffline/Download/components/DownloadLinks.jsx","modules/ampoffline/Download/components/AMPOfflineDownload.jsx","utils/reducers/translationsReducer.js","modules/ampoffline/Download/reducers/rootReducer.js","modules/ampoffline/Download/index.js"],"names":["module","exports","loadTranslations","trnPack","lang","Promise","resolve","reject","fetch","body","method","headers","JSON","stringify","then","response","json","data","error","Error","fetchTranslations","translations","dispatch","type","payload","fetchTranslationsPending","fetchTranslationsSuccess","catch","fetchTranslationsError","initialState","pending","releases","getReleases","state","getReleasesPending","getReleasesError","fetchReleases","res","fetchReleasesError","DownloadLinks","props","shouldComponentRender","bind","this","links","sort","i","j","os","map","push","href","id","_getInstallerName","arch","l","key","name","platform","architecture","family","toLowerCase","osNames","indexOf","filter","length","toString","installerName","className","version","message","role","_detectBestInstaller","_buildLinksTable","Component","connect","startupReducer","translationsReducer","bindActionCreators","AMPOfflineDownload","src","monitor","combineReducers","action","defaultTrnPack","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","AMPOfflineDownloadAPP","store","createStore","rootReducer","applyMiddleware","thunk"],"mappings":"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","file":"static/js/3.d25e4b0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monitor.17b541c5.png\";","function getRequestOptions(body) {\n    const requestOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},\n        body: JSON.stringify(body)\n    };\n    return requestOptions;\n}\n\nexport function loadTranslations(trnPack, lang) {\n    return new Promise((resolve, reject) => {\n        return fetch('/rest/translations/label-translations', getRequestOptions(trnPack))\n            .then(response => {\n                return response.json();\n            })\n            .then(data => {\n                if (data.error) {\n                    throw new Error(data.error);\n                }\n                return resolve(data);\n            });\n    })\n}\n","import {fetchTranslationsSuccess, fetchTranslationsPending, fetchTranslationsError}\n    from '../../../../utils/actions/translationsActions';\nimport {loadTranslations} from '../../../../utils/loadTranslations';\nimport trnPack from '../config/initialTranslations';\n\nfunction fetchTranslations(translations) {\n    return dispatch => {\n        dispatch(fetchTranslationsPending(translations));\n        return loadTranslations(trnPack)\n            .then(trnPack => dispatch(fetchTranslationsSuccess(trnPack)))\n            .catch(error => dispatch(fetchTranslationsError(error)));\n    }\n}\n\nexport default fetchTranslations;\n","export const FETCH_TRANSLATIONS_PENDING = 'FETCH_TRANSLATIONS_PENDING';\nexport const FETCH_TRANSLATIONS_SUCCESS = 'FETCH_TRANSLATIONS_SUCCESS';\nexport const FETCH_TRANSLATIONS_ERROR = 'FETCH_TRANSLATIONS_ERROR';\n\nexport function fetchTranslationsPending(translations) {\n    return {\n        type: FETCH_TRANSLATIONS_PENDING,\n        payload: translations\n    }\n}\n\nexport function fetchTranslationsSuccess(translations) {\n    return {\n        type: FETCH_TRANSLATIONS_SUCCESS,\n        payload: translations\n    }\n}\n\nexport function fetchTranslationsError(error) {\n    return {\n        type: FETCH_TRANSLATIONS_ERROR,\n        error: error\n    }\n};\n","import {FETCH_RELEASES_PENDING, FETCH_RELEASES_SUCCESS, FETCH_RELEASES_ERROR} from '../actions/startupAction';\n\nconst initialState = {\n    pending: false,\n    releases: [],\n    error: null\n}\n\nexport default function startupReducer(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_RELEASES_PENDING:\n            return {\n                ...state,\n                pending: true\n            }\n        case FETCH_RELEASES_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                releases: action.payload\n            }\n        case FETCH_RELEASES_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n\nexport const getReleases = state => state.releases;\nexport const getReleasesPending = state => state.pending;\nexport const getReleasesError = state => state.error;\n","import {fetchReleasesSuccess, fetchReleasesPending, fetchReleasesError} from '../actions/startupAction';\nimport {AMP_OFFLINE_INSTALLERS} from '../constants/Constants'\n\nfunction fetchReleases() {\n    return dispatch => {\n        dispatch(fetchReleasesPending());\n        fetch(AMP_OFFLINE_INSTALLERS)\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    throw(res.error);\n                }\n                dispatch(fetchReleasesSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(fetchReleasesError(error));\n            });\n    }\n}\nexport default fetchReleases;\n","export const FETCH_RELEASES_PENDING = 'FETCH_RELEASES_PENDING';\nexport const FETCH_RELEASES_SUCCESS = 'FETCH_RELEASES_SUCCESS';\nexport const FETCH_RELEASES_ERROR = 'FETCH_RELEASES_ERROR';\n\nexport function fetchReleasesPending() {\n    return {\n        type: FETCH_RELEASES_PENDING\n    }\n}\n\nexport function fetchReleasesSuccess(releases) {\n    return {\n        type: FETCH_RELEASES_SUCCESS,\n        payload: releases\n    }\n}\nexport function fetchReleasesError(error) {\n    return {\n        type: FETCH_RELEASES_ERROR,\n        error: error\n    }\n};\n","export const AMP_OFFLINE_INSTALLERS = '/rest/amp/amp-offline-release';\nexport const WINDOWS = 'windows';\nexport const MAC = 'osx';\nexport const DEBIAN_LINUX = 'debian';\nexport const REDHAT_LINUX = 'redhat';\nexport const MACINTOSH = 'macintosh';\nexport const OS_X = 'os x';\nexport const LINUX = 'linux';\n","import React, {Component} from \"react\";\nimport platform from \"platform\";\nimport {getReleases, getReleasesError, getReleasesPending} from '../reducers/startupReducer';\nimport fetchReleases from '../actions/fetchReleases';\nimport {\n    AMP_OFFLINE_INSTALLERS, DEBIAN_LINUX, LINUX, MAC, MACINTOSH, OS_X, REDHAT_LINUX, WINDOWS\n} from '../constants/Constants';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\n\nclass DownloadLinks extends Component {\n\n    constructor(props) {\n        super(props);\n        this.shouldComponentRender = this.shouldComponentRender.bind(this);\n        this.translations = props.translations;\n    }\n\n\n    componentDidMount() {\n        const {fetchReleases} = this.props;\n        fetchReleases();\n    }\n\n    shouldComponentRender() {\n        return !this.props.pending;\n    }\n\n\n    _buildLinksTable() {\n        const links = [];\n        if (this.props.releases) {\n            this.props.releases.sort((i, j) => i.os > j.os).map(i => {\n                return links.push(<a\n                    href={`${AMP_OFFLINE_INSTALLERS}/${i.id}`}>{this._getInstallerName(i.os, i.arch)}</a>);\n            });\n            return (<ul>\n                {links.map((l, j) => (<li key={j}>{l}</li>))}\n            </ul>);\n        } else {\n            return null;\n        }\n    }\n\n    _getInstallerName(os, arch) {\n        let name = '';\n        switch (os) {\n            case WINDOWS:\n                name = `Windows Vista/7/8/10 - ${arch} ${this.translations['amp.offline:bits']}`;\n                break;\n            case DEBIAN_LINUX:\n                name = `Ubuntu Linux (.deb) - ${arch} ${this.translations['amp.offline:bits']}`;\n                break;\n            case REDHAT_LINUX:\n                name = `RedHat Linux (.rpm) - ${arch} ${this.translations['amp.offline:bits']}`;\n                break;\n            case MAC:\n                name = `Mac OS - ${arch} ${this.translations['amp.offline:bits']}`;\n                break;\n        }\n        return name;\n    }\n\n    _detectBestInstaller() {\n\n        const os = platform.os;\n        const arch = os.architecture;\n        const family = os.family.toLowerCase();\n        let osNames = null;\n        if (family.indexOf(WINDOWS) > -1) {\n            osNames = [WINDOWS];\n        } else if (family.indexOf(MACINTOSH) > -1 || family.indexOf(OS_X) > -1) {\n            osNames = [MAC];\n        } else if (family.indexOf(LINUX) > -1) {\n            osNames = [DEBIAN_LINUX, REDHAT_LINUX];\n        } else {\n            return [];\n        }\n        const installer = this.props.releases.filter(i => (osNames.filter(os => os === i.os).length > 0 && i.arch === arch.toString()));\n        const links = installer.map(i => {\n            const installerName = this._getInstallerName(i.os, i.arch);\n            return (<div key={i.id} className=\"link\"><a\n                href={`${AMP_OFFLINE_INSTALLERS}/${i.id}`}>{this.translations['amp.offline:download']} {i.version} - {installerName}</a>\n            </div>);\n        });\n        const message = this.translations['amp.offline:best-version-message'];\n        return (\n            links.length > 0 &&\n            <div className=\"alert alert-info\" role=\"alert\"><span className=\"info-text\">{message}</span>{links}</div>);\n    }\n\n    render() {\n        if (!this.shouldComponentRender()) {\n            return <div>loading</div>\n        } else {\n            return (\n                <div>\n                    <div>\n                        {this._detectBestInstaller()}\n                    </div>\n                    <h4>{this.translations['amp.offline:all-versions']}</h4>\n                    <div>\n                        {this._buildLinksTable()}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    error: getReleasesError(state.startupReducer),\n    releases: getReleases(state.startupReducer),\n    pending: getReleasesPending(state.startupReducer),\n    translations:state.translationsReducer.translations\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchReleases: fetchReleases}, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadLinks);\n\n\n","import React, {Component} from 'react';\n\nimport fetchTranslations from '../actions/fetchTranslations';\nimport DownloadLinks from './DownloadLinks';\nimport monitor from '../images/monitor.png';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport './css/style.css';\n\nclass AMPOfflineDownload extends Component {\n\n    render() {\n        const {translations} = this.props.translationsReducer;\n\n        return (<div>\n            <div className='col-md-5'>\n                <img src={monitor}/>\n            </div>\n            <div className='col-md-7'>\n                <div className='main_text'>\n                    <h2>{translations['amp.offline:download-title']}</h2>\n                    <span>{translations['amp.offline:text']}</span>*/}\n                </div>\n                <div>\n                    <DownloadLinks/>\n                </div>\n            </div>\n        </div>);\n    }\n}\n\n/*\nconst mapStateToProps = state => ({...state});\n*/\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    };\n};\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AMPOfflineDownload);\n","import {\n    FETCH_TRANSLATIONS_ERROR,FETCH_TRANSLATIONS_PENDING,FETCH_TRANSLATIONS_SUCCESS\n} from '../actions/translationsActions';\n\nconst initialState = {\n    pending: false,\n    translations: {},\n    error: null\n}\n\nexport default function translationsReducer(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_TRANSLATIONS_PENDING:\n            return {\n                ...state,\n                pending: true,\n                translations: action.payload.defaultTrnPack\n            }\n        case FETCH_TRANSLATIONS_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                translations: action.payload\n            }\n        case FETCH_TRANSLATIONS_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from 'redux';\nimport startupReducer from './startupReducer';\nimport translationsReducer from \"../../../../utils/reducers/translationsReducer\";\n\nexport default combineReducers({\n    startupReducer,\n    translationsReducer,\n});\n","import React, {Component} from 'react';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux'\n\nimport AMPOfflineDownload from \"./components/AMPOfflineDownload\";\nimport rootReducer from './reducers/rootReducer';\nimport defaultTrnPack from './config/initialTranslations';\nimport fetchTranslations from './actions/fetchTranslations';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nclass AMPOfflineDownloadAPP extends Component {\n    constructor(props) {\n        super(props)\n        this.store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\n    }\n\n    componentDidMount() {\n        this.store.dispatch(fetchTranslations({defaultTrnPack}));\n    }\n\n    render() {\n        return (<Provider store={this.store}>\n            <AMPOfflineDownload/>\n        </Provider>);\n\n    }\n}\n\nexport default AMPOfflineDownloadAPP;\n"],"sourceRoot":""}